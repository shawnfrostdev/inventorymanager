name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: invenage_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'

    # Backend Tests
    - name: Install Backend Dependencies
      working-directory: ./server
      run: npm ci

    - name: Run Backend Tests
      working-directory: ./server
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/invenage_test
        JWT_SECRET: test-jwt-secret
        JWT_REFRESH_SECRET: test-jwt-refresh-secret
      run: |
        npm run prisma:generate
        npm run test

    # Frontend Tests
    - name: Install Frontend Dependencies
      working-directory: ./client
      run: npm ci

    - name: Run Frontend Tests
      working-directory: ./client
      run: npm test

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    # Deploy to Vercel (Frontend)
    - name: Deploy Frontend to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./client
        vercel-args: '--prod'

    # Deploy to Render (Backend)
    - name: Deploy Backend to Render
      env:
        RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl -X POST \
          -H "Authorization: Bearer $RENDER_TOKEN" \
          -H "Content-Type: application/json" \
          https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys 